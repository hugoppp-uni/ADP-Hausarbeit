digraph Q {

    node [shape = box];
    compound = true;

    a1 [label = "Insert(BTree, element)" shape = ellipse]
    a1 -> a2
    a2 [label = "<D1> isEmpty(BTree)" shape = diamond]
    a2-> b2 [label = "YES"]
    b2 [label = "<N1> neuen Baum mit element zurÃ¼ckgeben"]
    a2 -> element [label = "NO"]
    element [label = "<D2> element" shape = diamond]
    element -> smaller [label = "< BTree.element"]
    element -> "<N3> return" [label = " = BTree.Element\n (bereits vorhanden)"]
    element -> larger [label = "> BTree.element"]
    smaller [label = "<N2> Insert(BTree, left)"]
    larger [label = "<N4> InsertBTree(BTree, right)"]

    checkBalance[ label= "<N6> Rebalance(Btree)" color = blue]

    smaller -> checkReturn2
    larger -> checkReturn2
    checkReturn2 [label = "<N5>height = max(height_left, height_right) + 1"]
    checkReturn2 -> checkBalance [color = blue]
}

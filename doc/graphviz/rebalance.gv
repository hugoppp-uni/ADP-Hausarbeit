digraph G {
    node [shape = box];
    rebalance [label = "Rabalance(BTree)" shape = ellipse]
    check2 [label = "<D1> getBalance(BTree)" shape = diamond]
    check1Pos [label = "<D2> getBalance(BTree.left) = 1" shape = diamond]
    check1Neg [label = "<D3> getBalance(BTree.right) = -1" shape = diamond]

    RightRight [label = "<N21> rotateL(BTree)"]
    LeftLeft [label = "<N11> rotateR(BTree)"]

    RightLeft [label = "<N22> rotateR(BTree.Right)"]
    RightLeft -> "<N23> rotateL(BTree)" -> "<N24> increment(ddleftrotate)"
    LeftRight [label = "<N12> rotateL(BTree.Left)"]
    LeftRight -> "<N13> rotateR(BTree)" -> "<N14> increment(ddrightrotate)"

    rebalance -> check2

    check2 -> check1Pos [label = "= -2"]
    check1Pos -> LeftRight [label = "YES\nLeft Right Case"]
    check1Pos -> LeftLeft [label = "NO\nLeft Left Case"]

    check2 -> check1Neg [label = "= 2"]
    check1Neg -> RightLeft [label = "YES\nRight Left Case"]
    check1Neg -> RightRight [label = "NO\nRight Right Case"]

    check2 -> "<N1> Return" [label = "âˆˆ{-1,0,1}\nBalanced Case"]

}

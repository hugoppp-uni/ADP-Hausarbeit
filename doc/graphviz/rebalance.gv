digraph G {
    rebalance [label = "Rabalance(BTree)" shape = box]
    check2Neg [label = "getBalance(BTree) = -2" shape = diamond]
    check2Pos [label = "getBalance(BTree) = 2" shape = diamond]
    check1Pos [label = "getBalance(BTree.left) = 1" shape = diamond]
    check1Neg [label = "getBalance(BTree.right) = -1" shape = diamond]

    RightRight [label = "rotateL(BTree)"]
    LeftLeft [label = "rotateR(BTree)"]

    RightLeft [label = "rotateR(BTree.Right)"]
    RightLeft -> "rotateL(BTree)" -> "incement(ddleftrotate)"
    LeftRight [label = "rotateL(BTree.Left)"]
    LeftRight -> "rotateR(BTree)" -> "incement(ddrightrotate)"

    rebalance -> check2Neg

    check2Neg -> check1Pos [label = "YES"]
    check1Pos -> LeftRight [label = "YES\nLeft Right Case"]
    check1Pos -> LeftLeft [label = "NO\nLeft Left Case"]

    check2Neg -> check2Pos [label = "NO"]
    check2Pos -> check1Neg [label = "YES"]
    check1Neg -> RightLeft [label = "YES\nRight Left Case"]
    check1Neg -> RightRight [label = "NO\nRight Right Case"]

    check2Pos -> "Return" [label = "NO\nBalanced Case"]

}
